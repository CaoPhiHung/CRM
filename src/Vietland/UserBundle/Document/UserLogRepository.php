<?php

namespace Vietland\UserBundle\Document;

use Doctrine\ODM\MongoDB\DocumentRepository;

/**
 * HotelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserLogRepository extends DocumentRepository {

    private $count;

    public function findLastLogs() {
        return $this->createQueryBuilder()
                        ->field('action')->equals(UserLog::BUYITEM)
                        ->limit(5)
                        ->skip(0)->sort('id', 'desc')
                        ->getQuery()
                        ->execute();
        ;
    }

    public function findPage($uid = 155, $page = 1, $limit = 20) {
        if (!(int) $page)
            $page = 1;
        if (!(int) $limit)
            $limit = 20;
        $qb = $this->createQueryBuilder()
                        ->field('uid')->equals((int) $uid);
        $countQuery = clone $qb;
        $this->count = $countQuery->count()->getQuery()->execute();
        return $qb
                        ->limit((int) $limit)
                        ->skip(((int) $page - 1) * (int) $limit)->sort('id', 'desc')
                        ->getQuery()
                        ->execute();
        ;
    }

    public function findLastOrder($uid = 155, $page = 1, $limit = 20) {
        if (!(int) $page)
            $page = 1;
        if (!(int) $limit)
            $limit = 20;
        $qb = $this->createQueryBuilder()
                        ->field('uid')->equals((int) $uid)
                        ->field('action')->equals('buyitem');
        $countQuery = clone $qb;
        $this->count = $countQuery->count()->getQuery()->execute();
        return $qb
                        ->limit((int) $limit)
                        ->skip(((int) $page - 1) * (int) $limit)->getQuery()->execute();
    }

    public function getCount() {
        return $this->count;
    }

    public function findFirstOrderOneYear($uid) {
        $lastyear = new \DateTime('now');
        $lastyear->sub(new \DateInterval("P1Y"));
        $orders = $this->createQueryBuilder()
                        ->field('uid')->equals((int) $uid)
                        ->field('action')->equals('buyitem')
                        ->field('created')->lt($lastyear)
                        ->limit(1)
                        ->skip(0)->sort('id', 'desc')->getQuery()->execute();
        $order = null;

        if ($orders->count()) {
            $order = $orders->getSingleResult();
        }

        return $order;
    }

    public function findFirstLatestOrder($uid) {
        
        $lastyear = new \DateTime('now');
        $orders = $this->createQueryBuilder()
                        ->field('uid')->equals((int) $uid)
                        ->field('uid')->equals($uid)
                        ->field('action')->equals('buyitem')
                        ->field('created')->lt($lastyear)
                        ->limit(1)
                        ->skip(0)->sort('id', 'desc')->getQuery()->execute();


        $order = null;

        if ($orders->count()) {
            $order = $orders->getSingleResult();
        }

        return $order;
    }

}
