<?php

namespace Aevitas\LevisBundle\Document;

use Doctrine\ODM\MongoDB\DocumentRepository;
use Aevitas\LevisBundle\Document\Cart;

/**
 * HotelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CartRepository extends DocumentRepository {

    private $count;

    public function getCarts($page = 1, $limit = 9, $sort = 'id') {
        if (!(int) $page)
            $page = 1;
        if (!(int) $limit)
            $limit = 9;
        if (is_null($sort))
            $sort = 'id';
        $qb = $this->createQueryBuilder()->field('uid')->exists(true)->field('sid')->exists(true)
                        ->limit((int) $limit)
                        ->skip(((int) $page - 1) * (int) $limit)->sort($sort, 'desc')
        ;
        $countQuery = clone $qb;
        $this->count = $countQuery->count()->getQuery()->execute();
        return $qb->getQuery()
                        ->execute();
    }

    public function getCount() {
        return $this->count;
    }

    public function getCartsByStore($store, $page = 1, $limit = 9, $sort = 'id') {
        if (!(int) $page)
            $page = 1;
        if (!(int) $limit)
            $limit = 9;
        if (is_null($sort))
            $sort = 'id';
        $qb = $this->createQueryBuilder()->field('uid')->exists(true)->field('sid')->equals((int) $store)
                        ->field('status')->notEqual(Cart::STATUS_PENDING)
                        ->limit((int) $limit)
                        ->skip(((int) $page - 1) * (int) $limit)->sort($sort, 'desc')
        ;
        $countQuery = clone $qb;
        $this->count = $countQuery->count()->getQuery()->execute();
        return $qb->getQuery()
                        ->execute();
    }

}