<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class AevitasChannelBundleDocumentCronJobHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="int_id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = (int) $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['type'])) {
            $value = $data['type'];
            $return = (int) $value;
            $this->class->reflFields['type']->setValue($document, $return);
            $hydratedData['type'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['delaytype'])) {
            $value = $data['delaytype'];
            $return = (int) $value;
            $this->class->reflFields['delaytype']->setValue($document, $return);
            $hydratedData['delaytype'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['cmd'])) {
            $value = $data['cmd'];
            $return = (string) $value;
            $this->class->reflFields['cmd']->setValue($document, $return);
            $hydratedData['cmd'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['time'])) {
            $value = $data['time'];
            $return = (int) $value;
            $this->class->reflFields['time']->setValue($document, $return);
            $hydratedData['time'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['times'])) {
            $value = $data['times'];
            $return = (int) $value;
            $this->class->reflFields['times']->setValue($document, $return);
            $hydratedData['times'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['status'])) {
            $value = $data['status'];
            $return = (int) $value;
            $this->class->reflFields['status']->setValue($document, $return);
            $hydratedData['status'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['process'])) {
            $value = $data['process'];
            $return = (int) $value;
            $this->class->reflFields['process']->setValue($document, $return);
            $hydratedData['process'] = $return;
        }
        return $hydratedData;
    }
}