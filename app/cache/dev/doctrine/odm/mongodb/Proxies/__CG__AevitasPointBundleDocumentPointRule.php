<?php

namespace MongoDBODMProxies\__CG__\Aevitas\PointBundle\Document;

use Doctrine\ODM\MongoDB\Persisters\DocumentPersister;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class PointRule extends \Aevitas\PointBundle\Document\PointRule implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    private $__documentPersister__;
    public $__identifier__;
    public $__isInitialized__ = false;
    public function __construct(DocumentPersister $documentPersister, $identifier)
    {
        $this->__documentPersister__ = $documentPersister;
        $this->__identifier__ = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->__documentPersister__) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->__documentPersister__->load($this->__identifier__, $this) === null) {
                throw \Doctrine\ODM\MongoDB\DocumentNotFoundException::documentNotFound(get_class($this), $this->__identifier__);
            }
            unset($this->__documentPersister__, $this->__identifier__);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getEarnedPoints($points)
    {
        $this->__load();
        return parent::getEarnedPoints($points);
    }

    public function getLevelLabel()
    {
        $this->__load();
        return parent::getLevelLabel();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return $this->__identifier__;
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function setPoint($point)
    {
        $this->__load();
        return parent::setPoint($point);
    }

    public function getPoint()
    {
        $this->__load();
        return parent::getPoint();
    }

    public function setSDayInMonth($day)
    {
        $this->__load();
        return parent::setSDayInMonth($day);
    }

    public function getSDayInMonth()
    {
        $this->__load();
        return parent::getSDayInMonth();
    }

    public function setAction($action)
    {
        $this->__load();
        return parent::setAction($action);
    }

    public function getAction()
    {
        $this->__load();
        return parent::getAction();
    }

    public function setGender($gender)
    {
        $this->__load();
        return parent::setGender($gender);
    }

    public function getGender()
    {
        $this->__load();
        return parent::getGender();
    }

    public function setAnniversary($anniversary)
    {
        $this->__load();
        return parent::setAnniversary($anniversary);
    }

    public function getAnniversary()
    {
        $this->__load();
        return parent::getAnniversary();
    }

    public function setBonus($bonus)
    {
        $this->__load();
        return parent::setBonus($bonus);
    }

    public function getBonus()
    {
        $this->__load();
        return parent::getBonus();
    }

    public function setBirthday($birthday)
    {
        $this->__load();
        return parent::setBirthday($birthday);
    }

    public function getBirthday()
    {
        $this->__load();
        return parent::getBirthday();
    }

    public function setOperation($operation)
    {
        $this->__load();
        return parent::setOperation($operation);
    }

    public function getOperation()
    {
        $this->__load();
        return parent::getOperation();
    }

    public function setLevel($level)
    {
        $this->__load();
        return parent::setLevel($level);
    }

    public function getLevel()
    {
        $this->__load();
        return parent::getLevel();
    }

    public function setProgram($program)
    {
        $this->__load();
        return parent::setProgram($program);
    }

    public function getProgram()
    {
        $this->__load();
        return parent::getProgram();
    }

    public function setStore($store)
    {
        $this->__load();
        return parent::setStore($store);
    }

    public function getStore()
    {
        $this->__load();
        return parent::getStore();
    }

    public function setDistrict($district)
    {
        $this->__load();
        return parent::setDistrict($district);
    }

    public function getDistrict()
    {
        $this->__load();
        return parent::getDistrict();
    }

    public function setCity($city)
    {
        $this->__load();
        return parent::setCity($city);
    }

    public function getCity()
    {
        $this->__load();
        return parent::getCity();
    }

    public function setLocate($locate = NULL)
    {
        $this->__load();
        return parent::setLocate($locate);
    }

    public function getLocate()
    {
        $this->__load();
        return parent::getLocate();
    }

    public function afterRemove()
    {
        $this->__load();
        return parent::afterRemove();
    }

    public function setFDayInMonth($fDayInMonth)
    {
        $this->__load();
        return parent::setFDayInMonth($fDayInMonth);
    }

    public function getFDayInMonth()
    {
        $this->__load();
        return parent::getFDayInMonth();
    }

    public function setArrDayInWeek($arrDayInWeek)
    {
        $this->__load();
        return parent::setArrDayInWeek($arrDayInWeek);
    }

    public function getArrDayInWeek()
    {
        $this->__load();
        return parent::getArrDayInWeek();
    }

    public function setSHourInDay($sHourInDay)
    {
        $this->__load();
        return parent::setSHourInDay($sHourInDay);
    }

    public function getSHourInDay()
    {
        $this->__load();
        return parent::getSHourInDay();
    }

    public function setFHourInDay($fHourInDay)
    {
        $this->__load();
        return parent::setFHourInDay($fHourInDay);
    }

    public function getFHourInDay()
    {
        $this->__load();
        return parent::getFHourInDay();
    }

    public function setDayParity($DayParity)
    {
        $this->__load();
        return parent::setDayParity($DayParity);
    }

    public function getDayParity()
    {
        $this->__load();
        return parent::getDayParity();
    }

    public function setSDay($sDay)
    {
        $this->__load();
        return parent::setSDay($sDay);
    }

    public function getSDay()
    {
        $this->__load();
        return parent::getSDay();
    }

    public function setFDay($fDay)
    {
        $this->__load();
        return parent::setFDay($fDay);
    }

    public function getFDay()
    {
        $this->__load();
        return parent::getFDay();
    }

    public function setSchema($schema)
    {
        $this->__load();
        return parent::setSchema($schema);
    }

    public function getSchema()
    {
        $this->__load();
        return parent::getSchema();
    }

    public function beforePersist()
    {
        $this->__load();
        return parent::beforePersist();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'point', 'action', 'gender', 'anniversary', 'birthday', 'bonus', 'operation', 'level', 'program', 'store', 'city', 'district', 'locate', 'sDayInMonth', 'fDayInMonth', 'arrDayInWeek', 'sHourInDay', 'fHourInDay', 'DayParity', 'sDay', 'fDay', 'schema');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->__documentPersister__) {
            $this->__isInitialized__ = true;
            $class = $this->__documentPersister__->getClassMetadata();
            $original = $this->__documentPersister__->load($this->__identifier__);
            if ($original === null) {
                throw \Doctrine\ODM\MongoDB\MongoDBException::documentNotFound(get_class($this), $this->__identifier__);
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->__documentPersister__, $this->__identifier__);
        }
        
    }
}