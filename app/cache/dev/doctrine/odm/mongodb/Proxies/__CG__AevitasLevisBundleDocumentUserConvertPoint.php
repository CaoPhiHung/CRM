<?php

namespace MongoDBODMProxies\__CG__\Aevitas\LevisBundle\Document;

use Doctrine\ODM\MongoDB\Persisters\DocumentPersister;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class UserConvertPoint extends \Aevitas\LevisBundle\Document\UserConvertPoint implements \Doctrine\ODM\MongoDB\Proxy\Proxy
{
    private $__documentPersister__;
    public $__identifier__;
    public $__isInitialized__ = false;
    public function __construct(DocumentPersister $documentPersister, $identifier)
    {
        $this->__documentPersister__ = $documentPersister;
        $this->__identifier__ = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->__documentPersister__) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->__documentPersister__->load($this->__identifier__, $this) === null) {
                throw \Doctrine\ODM\MongoDB\DocumentNotFoundException::documentNotFound(get_class($this), $this->__identifier__);
            }
            unset($this->__documentPersister__, $this->__identifier__);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setVnd($vnd)
    {
        $this->__load();
        return parent::setVnd($vnd);
    }

    public function getVnd()
    {
        $this->__load();
        return parent::getVnd();
    }

    public function getData()
    {
        $this->__load();
        return parent::getData();
    }

    public function getBaserate()
    {
        $this->__load();
        return parent::getBaserate();
    }

    public function setBaserate($baserate)
    {
        $this->__load();
        return parent::setBaserate($baserate);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return $this->__identifier__;
        }
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setUser($user)
    {
        $this->__load();
        return parent::setUser($user);
    }

    public function setPoint($point)
    {
        $this->__load();
        return parent::setPoint($point);
    }

    public function getPoint()
    {
        $this->__load();
        return parent::getPoint();
    }

    public function getStore()
    {
        $this->__load();
        return parent::getStore();
    }

    public function setStore($store)
    {
        $this->__load();
        return parent::setStore($store);
    }

    public function getHash()
    {
        $this->__load();
        return parent::getHash();
    }

    public function setHash($hash)
    {
        $this->__load();
        return parent::setHash($hash);
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function setCreated($created)
    {
        $this->__load();
        return parent::setCreated($created);
    }

    public function setAuth($auth)
    {
        $this->__load();
        return parent::setAuth($auth);
    }

    public function getAuth()
    {
        $this->__load();
        return parent::getAuth();
    }

    public function getSid()
    {
        $this->__load();
        return parent::getSid();
    }

    public function setSid($sid)
    {
        $this->__load();
        return parent::setSid($sid);
    }

    public function getBPoint()
    {
        $this->__load();
        return parent::getBPoint();
    }

    public function setBPoint($bPoint)
    {
        $this->__load();
        return parent::setBPoint($bPoint);
    }

    public function getAPoint()
    {
        $this->__load();
        return parent::getAPoint();
    }

    public function setAPoint($aPoint)
    {
        $this->__load();
        return parent::setAPoint($aPoint);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'user', 'uid', 'store', 'created', 'sid', 'hash', 'auth', 'point', 'bPoint', 'aPoint', 'vnd', 'baserate');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->__documentPersister__) {
            $this->__isInitialized__ = true;
            $class = $this->__documentPersister__->getClassMetadata();
            $original = $this->__documentPersister__->load($this->__identifier__);
            if ($original === null) {
                throw \Doctrine\ODM\MongoDB\MongoDBException::documentNotFound(get_class($this), $this->__identifier__);
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->__documentPersister__, $this->__identifier__);
        }
        
    }
}