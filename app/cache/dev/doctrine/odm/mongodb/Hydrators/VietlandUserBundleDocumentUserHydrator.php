<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class VietlandUserBundleDocumentUserHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="string") */
        if (isset($data['username'])) {
            $value = $data['username'];
            $return = (string) $value;
            $this->class->reflFields['username']->setValue($document, $return);
            $hydratedData['username'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['usernameCanonical'])) {
            $value = $data['usernameCanonical'];
            $return = (string) $value;
            $this->class->reflFields['usernameCanonical']->setValue($document, $return);
            $hydratedData['usernameCanonical'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['email'])) {
            $value = $data['email'];
            $return = (string) $value;
            $this->class->reflFields['email']->setValue($document, $return);
            $hydratedData['email'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['emailCanonical'])) {
            $value = $data['emailCanonical'];
            $return = (string) $value;
            $this->class->reflFields['emailCanonical']->setValue($document, $return);
            $hydratedData['emailCanonical'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['enabled'])) {
            $value = $data['enabled'];
            $return = (bool) $value;
            $this->class->reflFields['enabled']->setValue($document, $return);
            $hydratedData['enabled'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['salt'])) {
            $value = $data['salt'];
            $return = (string) $value;
            $this->class->reflFields['salt']->setValue($document, $return);
            $hydratedData['salt'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['password'])) {
            $value = $data['password'];
            $return = (string) $value;
            $this->class->reflFields['password']->setValue($document, $return);
            $hydratedData['password'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['lastLogin'])) {
            $value = $data['lastLogin'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } else { $return = new \DateTime($value); }
            $this->class->reflFields['lastLogin']->setValue($document, clone $return);
            $hydratedData['lastLogin'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['locked'])) {
            $value = $data['locked'];
            $return = (bool) $value;
            $this->class->reflFields['locked']->setValue($document, $return);
            $hydratedData['locked'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['expired'])) {
            $value = $data['expired'];
            $return = (bool) $value;
            $this->class->reflFields['expired']->setValue($document, $return);
            $hydratedData['expired'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['expiresAt'])) {
            $value = $data['expiresAt'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } else { $return = new \DateTime($value); }
            $this->class->reflFields['expiresAt']->setValue($document, clone $return);
            $hydratedData['expiresAt'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['confirmationToken'])) {
            $value = $data['confirmationToken'];
            $return = (string) $value;
            $this->class->reflFields['confirmationToken']->setValue($document, $return);
            $hydratedData['confirmationToken'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['passwordRequestedAt'])) {
            $value = $data['passwordRequestedAt'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } else { $return = new \DateTime($value); }
            $this->class->reflFields['passwordRequestedAt']->setValue($document, clone $return);
            $hydratedData['passwordRequestedAt'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['roles'])) {
            $value = $data['roles'];
            $return = $value;
            $this->class->reflFields['roles']->setValue($document, $return);
            $hydratedData['roles'] = $return;
        }

        /** @Field(type="int_id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = (int) $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['point'])) {
            $value = $data['point'];
            $return = (int) $value;
            $this->class->reflFields['point']->setValue($document, $return);
            $hydratedData['point'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['bonuspoints'])) {
            $value = $data['bonuspoints'];
            $return = (int) $value;
            $this->class->reflFields['bonuspoints']->setValue($document, $return);
            $hydratedData['bonuspoints'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['bonusexpired'])) {
            $value = $data['bonusexpired'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } else { $return = new \DateTime($value); }
            $this->class->reflFields['bonusexpired']->setValue($document, clone $return);
            $hydratedData['bonusexpired'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['posId'])) {
            $value = $data['posId'];
            $return = (string) $value;
            $this->class->reflFields['posId']->setValue($document, $return);
            $hydratedData['posId'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['dob'])) {
            $value = $data['dob'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } else { $return = new \DateTime($value); }
            $this->class->reflFields['dob']->setValue($document, clone $return);
            $hydratedData['dob'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['sex'])) {
            $value = $data['sex'];
            $return = (int) $value;
            $this->class->reflFields['sex']->setValue($document, $return);
            $hydratedData['sex'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['address1'])) {
            $value = $data['address1'];
            $return = (string) $value;
            $this->class->reflFields['address1']->setValue($document, $return);
            $hydratedData['address1'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['address2'])) {
            $value = $data['address2'];
            $return = (string) $value;
            $this->class->reflFields['address2']->setValue($document, $return);
            $hydratedData['address2'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['dship'])) {
            $value = $data['dship'];
            $return = (bool) $value;
            $this->class->reflFields['dship']->setValue($document, $return);
            $hydratedData['dship'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['address3'])) {
            $value = $data['address3'];
            $return = (string) $value;
            $this->class->reflFields['address3']->setValue($document, $return);
            $hydratedData['address3'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['commonname'])) {
            $value = $data['commonname'];
            $return = (string) $value;
            $this->class->reflFields['commonname']->setValue($document, $return);
            $hydratedData['commonname'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['state'])) {
            $value = $data['state'];
            $return = (string) $value;
            $this->class->reflFields['state']->setValue($document, $return);
            $hydratedData['state'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['district'])) {
            $value = $data['district'];
            $return = (string) $value;
            $this->class->reflFields['district']->setValue($document, $return);
            $hydratedData['district'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['city'])) {
            $value = $data['city'];
            $return = (string) $value;
            $this->class->reflFields['city']->setValue($document, $return);
            $hydratedData['city'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['ref'])) {
            $value = $data['ref'];
            $return = (int) $value;
            $this->class->reflFields['ref']->setValue($document, $return);
            $hydratedData['ref'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['phone'])) {
            $value = $data['phone'];
            $return = (string) $value;
            $this->class->reflFields['phone']->setValue($document, $return);
            $hydratedData['phone'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['fax'])) {
            $value = $data['fax'];
            $return = (string) $value;
            $this->class->reflFields['fax']->setValue($document, $return);
            $hydratedData['fax'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['brand'])) {
            $value = $data['brand'];
            $return = (string) $value;
            $this->class->reflFields['brand']->setValue($document, $return);
            $hydratedData['brand'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['aniversary'])) {
            $value = $data['aniversary'];
            $return = (string) $value;
            $this->class->reflFields['aniversary']->setValue($document, $return);
            $hydratedData['aniversary'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['accountid'])) {
            $value = $data['accountid'];
            $return = (string) $value;
            $this->class->reflFields['accountid']->setValue($document, $return);
            $hydratedData['accountid'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['accounttype'])) {
            $value = $data['accounttype'];
            $return = (string) $value;
            $this->class->reflFields['accounttype']->setValue($document, $return);
            $hydratedData['accounttype'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['cellphone'])) {
            $value = $data['cellphone'];
            $return = (string) $value;
            $this->class->reflFields['cellphone']->setValue($document, $return);
            $hydratedData['cellphone'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['fbid'])) {
            $value = $data['fbid'];
            $return = (string) $value;
            $this->class->reflFields['fbid']->setValue($document, $return);
            $hydratedData['fbid'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['glid'])) {
            $value = $data['glid'];
            $return = (string) $value;
            $this->class->reflFields['glid']->setValue($document, $return);
            $hydratedData['glid'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['avatar'])) {
            $value = $data['avatar'];
            $return = (string) $value;
            $this->class->reflFields['avatar']->setValue($document, $return);
            $hydratedData['avatar'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['avatarCoords'])) {
            $value = $data['avatarCoords'];
            $return = (string) $value;
            $this->class->reflFields['avatarCoords']->setValue($document, $return);
            $hydratedData['avatarCoords'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['age'])) {
            $value = $data['age'];
            $return = (int) $value;
            $this->class->reflFields['age']->setValue($document, $return);
            $hydratedData['age'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['ttpay'])) {
            $value = $data['ttpay'];
            $return = (float) $value;
            $this->class->reflFields['ttpay']->setValue($document, $return);
            $hydratedData['ttpay'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['ava'])) {
            $value = $data['ava'];
            $return = (string) $value;
            $this->class->reflFields['ava']->setValue($document, $return);
            $hydratedData['ava'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['type'])) {
            $value = $data['type'];
            $return = (string) $value;
            $this->class->reflFields['type']->setValue($document, $return);
            $hydratedData['type'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['firstname'])) {
            $value = $data['firstname'];
            $return = (string) $value;
            $this->class->reflFields['firstname']->setValue($document, $return);
            $hydratedData['firstname'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['lastname'])) {
            $value = $data['lastname'];
            $return = (string) $value;
            $this->class->reflFields['lastname']->setValue($document, $return);
            $hydratedData['lastname'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['middlename'])) {
            $value = $data['middlename'];
            $return = (string) $value;
            $this->class->reflFields['middlename']->setValue($document, $return);
            $hydratedData['middlename'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['about'])) {
            $value = $data['about'];
            $return = (string) $value;
            $this->class->reflFields['about']->setValue($document, $return);
            $hydratedData['about'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['logs']) ? $data['logs'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork, '$');
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['logs']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['logs']->setValue($document, $return);
        $hydratedData['logs'] = $return;

        /** @Many */
        $mongoData = isset($data['staff']) ? $data['staff'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork, '$');
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['staff']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['staff']->setValue($document, $return);
        $hydratedData['staff'] = $return;

        /** @Field(type="string") */
        if (isset($data['cropped'])) {
            $value = $data['cropped'];
            $return = (string) $value;
            $this->class->reflFields['cropped']->setValue($document, $return);
            $hydratedData['cropped'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['storeId'])) {
            $value = $data['storeId'];
            $return = (int) $value;
            $this->class->reflFields['storeId']->setValue($document, $return);
            $hydratedData['storeId'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['mari'])) {
            $value = $data['mari'];
            $return = (int) $value;
            $this->class->reflFields['mari']->setValue($document, $return);
            $hydratedData['mari'] = $return;
        }

        /** @Field(type="boolean") */
        if (isset($data['nlt'])) {
            $value = $data['nlt'];
            $return = (bool) $value;
            $this->class->reflFields['nlt']->setValue($document, $return);
            $hydratedData['nlt'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['lastlogs']) ? $data['lastlogs'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork, '$');
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['lastlogs']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['lastlogs']->setValue($document, $return);
        $hydratedData['lastlogs'] = $return;

        /** @Field(type="int") */
        if (isset($data['kids'])) {
            $value = $data['kids'];
            $return = (int) $value;
            $this->class->reflFields['kids']->setValue($document, $return);
            $hydratedData['kids'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['ocpu'])) {
            $value = $data['ocpu'];
            $return = (int) $value;
            $this->class->reflFields['ocpu']->setValue($document, $return);
            $hydratedData['ocpu'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['inco'])) {
            $value = $data['inco'];
            $return = (int) $value;
            $this->class->reflFields['inco']->setValue($document, $return);
            $hydratedData['inco'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['anni']) ? $data['anni'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork, '$');
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['anni']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['anni']->setValue($document, $return);
        $hydratedData['anni'] = $return;

        /** @Field(type="string") */
        if (isset($data['edt'])) {
            $value = $data['edt'];
            $return = (string) $value;
            $this->class->reflFields['edt']->setValue($document, $return);
            $hydratedData['edt'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['CCode'])) {
            $value = $data['CCode'];
            $return = (string) $value;
            $this->class->reflFields['CCode']->setValue($document, $return);
            $hydratedData['CCode'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['qlf'])) {
            $value = $data['qlf'];
            $return = (int) $value;
            $this->class->reflFields['qlf']->setValue($document, $return);
            $hydratedData['qlf'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['level'])) {
            $value = $data['level'];
            $return = (int) $value;
            $this->class->reflFields['level']->setValue($document, $return);
            $hydratedData['level'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['uLevel'])) {
            $value = $data['uLevel'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } else { $return = new \DateTime($value); }
            $this->class->reflFields['uLevel']->setValue($document, clone $return);
            $hydratedData['uLevel'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['kp'])) {
            $value = $data['kp'];
            $return = (float) $value;
            $this->class->reflFields['kp']->setValue($document, $return);
            $hydratedData['kp'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['lastKp'])) {
            $value = $data['lastKp'];
            $return = (float) $value;
            $this->class->reflFields['lastKp']->setValue($document, $return);
            $hydratedData['lastKp'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['lastbuy'])) {
            $value = $data['lastbuy'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } else { $return = new \DateTime($value); }
            $this->class->reflFields['lastbuy']->setValue($document, clone $return);
            $hydratedData['lastbuy'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['join'])) {
            $value = $data['join'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } else { $return = new \DateTime($value); }
            $this->class->reflFields['join']->setValue($document, clone $return);
            $hydratedData['join'] = $return;
        }

        /** @Field(type="timestamp") */
        if (isset($data['edited'])) {
            $value = $data['edited'];
            $return = $value;
            $this->class->reflFields['edited']->setValue($document, $return);
            $hydratedData['edited'] = $return;
        }

        /** @Field(type="timestamp") */
        if (isset($data['change'])) {
            $value = $data['change'];
            $return = $value;
            $this->class->reflFields['change']->setValue($document, $return);
            $hydratedData['change'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['regcode'])) {
            $value = $data['regcode'];
            $return = (string) $value;
            $this->class->reflFields['regcode']->setValue($document, $return);
            $hydratedData['regcode'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['wishlist'])) {
            $value = $data['wishlist'];
            $return = $value;
            $this->class->reflFields['wishlist']->setValue($document, $return);
            $hydratedData['wishlist'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['newroles'])) {
            $value = $data['newroles'];
            $return = $value;
            $this->class->reflFields['newroles']->setValue($document, $return);
            $hydratedData['newroles'] = $return;
        }

        /** @Many */
        $mongoData = isset($data['carts']) ? $data['carts'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork, '$');
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['carts']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['carts']->setValue($document, $return);
        $hydratedData['carts'] = $return;

        /** @Many */
        $mongoData = isset($data['trdate']) ? $data['trdate'] : null;
        $return = new \Doctrine\ODM\MongoDB\PersistentCollection(new \Doctrine\Common\Collections\ArrayCollection(), $this->dm, $this->unitOfWork, '$');
        $return->setHints($hints);
        $return->setOwner($document, $this->class->fieldMappings['trdate']);
        $return->setInitialized(false);
        if ($mongoData) {
            $return->setMongoData($mongoData);
        }
        $this->class->reflFields['trdate']->setValue($document, $return);
        $hydratedData['trdate'] = $return;

        /** @Field(type="string") */
        if (isset($data['ans1'])) {
            $value = $data['ans1'];
            $return = (string) $value;
            $this->class->reflFields['ans1']->setValue($document, $return);
            $hydratedData['ans1'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['ans2'])) {
            $value = $data['ans2'];
            $return = (string) $value;
            $this->class->reflFields['ans2']->setValue($document, $return);
            $hydratedData['ans2'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['ans3'])) {
            $value = $data['ans3'];
            $return = (string) $value;
            $this->class->reflFields['ans3']->setValue($document, $return);
            $hydratedData['ans3'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['ans4'])) {
            $value = $data['ans4'];
            $return = (string) $value;
            $this->class->reflFields['ans4']->setValue($document, $return);
            $hydratedData['ans4'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['ans5'])) {
            $value = $data['ans5'];
            $return = (string) $value;
            $this->class->reflFields['ans5']->setValue($document, $return);
            $hydratedData['ans5'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['ans6'])) {
            $value = $data['ans6'];
            $return = (string) $value;
            $this->class->reflFields['ans6']->setValue($document, $return);
            $hydratedData['ans6'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['ans7'])) {
            $value = $data['ans7'];
            $return = (string) $value;
            $this->class->reflFields['ans7']->setValue($document, $return);
            $hydratedData['ans7'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['lang'])) {
            $value = $data['lang'];
            $return = (string) $value;
            $this->class->reflFields['lang']->setValue($document, $return);
            $hydratedData['lang'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['refcel'])) {
            $value = $data['refcel'];
            $return = (string) $value;
            $this->class->reflFields['refcel']->setValue($document, $return);
            $hydratedData['refcel'] = $return;
        }

        /** @Field(type="float") */
        if (isset($data['used'])) {
            $value = $data['used'];
            $return = (float) $value;
            $this->class->reflFields['used']->setValue($document, $return);
            $hydratedData['used'] = $return;
        }
        return $hydratedData;
    }
}