<?php

namespace Hydrators;

use Doctrine\ODM\MongoDB\DocumentManager;
use Doctrine\ODM\MongoDB\Mapping\ClassMetadata;
use Doctrine\ODM\MongoDB\Hydrator\HydratorInterface;
use Doctrine\ODM\MongoDB\UnitOfWork;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ODM. DO NOT EDIT THIS FILE.
 */
class AevitasLevisBundleDocumentGiftArticleHydrator implements HydratorInterface
{
    private $dm;
    private $unitOfWork;
    private $class;

    public function __construct(DocumentManager $dm, UnitOfWork $uow, ClassMetadata $class)
    {
        $this->dm = $dm;
        $this->unitOfWork = $uow;
        $this->class = $class;
    }

    public function hydrate($document, $data, array $hints = array())
    {
        $hydratedData = array();

        /** @Field(type="int_id") */
        if (isset($data['_id'])) {
            $value = $data['_id'];
            $return = (int) $value;
            $this->class->reflFields['id']->setValue($document, $return);
            $hydratedData['id'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['name'])) {
            $value = $data['name'];
            $return = (string) $value;
            $this->class->reflFields['name']->setValue($document, $return);
            $hydratedData['name'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['path'])) {
            $value = $data['path'];
            $return = (string) $value;
            $this->class->reflFields['path']->setValue($document, $return);
            $hydratedData['path'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['description'])) {
            $value = $data['description'];
            $return = (string) $value;
            $this->class->reflFields['description']->setValue($document, $return);
            $hydratedData['description'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['excerpt'])) {
            $value = $data['excerpt'];
            $return = (string) $value;
            $this->class->reflFields['excerpt']->setValue($document, $return);
            $hydratedData['excerpt'] = $return;
        }

        /** @Field(type="date") */
        if (isset($data['created'])) {
            $value = $data['created'];
            if ($value instanceof \MongoDate) { $return = new \DateTime(); $return->setTimestamp($value->sec); } elseif (is_numeric($value)) { $return = new \DateTime(); $return->setTimestamp($value); } else { $return = new \DateTime($value); }
            $this->class->reflFields['created']->setValue($document, clone $return);
            $hydratedData['created'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['point'])) {
            $value = $data['point'];
            $return = (int) $value;
            $this->class->reflFields['point']->setValue($document, $return);
            $hydratedData['point'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['slug'])) {
            $value = $data['slug'];
            $return = (string) $value;
            $this->class->reflFields['slug']->setValue($document, $return);
            $hydratedData['slug'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['isActive'])) {
            $value = $data['isActive'];
            $return = (int) $value;
            $this->class->reflFields['isActive']->setValue($document, $return);
            $hydratedData['isActive'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['gender'])) {
            $value = $data['gender'];
            $return = (int) $value;
            $this->class->reflFields['gender']->setValue($document, $return);
            $hydratedData['gender'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['inventory'])) {
            $value = $data['inventory'];
            $return = (int) $value;
            $this->class->reflFields['inventory']->setValue($document, $return);
            $hydratedData['inventory'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['DeliveryType'])) {
            $value = $data['DeliveryType'];
            $return = (int) $value;
            $this->class->reflFields['DeliveryType']->setValue($document, $return);
            $hydratedData['DeliveryType'] = $return;
        }

        /** @Field(type="int") */
        if (isset($data['catid'])) {
            $value = $data['catid'];
            $return = (int) $value;
            $this->class->reflFields['catid']->setValue($document, $return);
            $hydratedData['catid'] = $return;
        }

        /** @ReferenceOne */
        if (isset($data['cg'])) {
            $reference = $data['cg'];
            if (isset($this->class->fieldMappings['cg']['simple']) && $this->class->fieldMappings['cg']['simple']) {
                $className = $this->class->fieldMappings['cg']['targetDocument'];
                $mongoId = $reference;
            } else {
                $className = $this->dm->getClassNameFromDiscriminatorValue($this->class->fieldMappings['cg'], $reference);
                $mongoId = $reference['$id'];
            }
            $targetMetadata = $this->dm->getClassMetadata($className);
            $id = $targetMetadata->getPHPIdentifierValue($mongoId);
            $return = $this->dm->getReference($className, $id);
            $this->class->reflFields['cg']->setValue($document, $return);
            $hydratedData['cg'] = $return;
        }

        /** @Field(type="string") */
        if (isset($data['cat'])) {
            $value = $data['cat'];
            $return = (string) $value;
            $this->class->reflFields['cat']->setValue($document, $return);
            $hydratedData['cat'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['tags'])) {
            $value = $data['tags'];
            $return = $value;
            $this->class->reflFields['tags']->setValue($document, $return);
            $hydratedData['tags'] = $return;
        }

        /** @Field(type="collection") */
        if (isset($data['images'])) {
            $value = $data['images'];
            $return = $value;
            $this->class->reflFields['images']->setValue($document, $return);
            $hydratedData['images'] = $return;
        }
        return $hydratedData;
    }
}